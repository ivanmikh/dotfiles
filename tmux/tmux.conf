# Some tweaks to the status line
#set -g window-status-current-attr "underscore"
# Change color when prefix is sent
set -g status-right ' #{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}"#{=21:pane_title}"'

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM to tmux-256color
set -g default-terminal "xterm-256color"
#set-option -g default-terminal "screen-256color"

# No bells at all
set -g bell-action none

# Keep windows around after they exit
#set -g remain-on-exit on

# 0 delay on Esc
set -sg escape-time 0

# Set terminal title
set-option -g set-titles on
set-option -g set-titles-string "tmux #S/#H"

# Highlight current window
setw -g window-status-current-style bg=black

# Logging dirs
set -g @logging-path "$HOME/.tmux/logs"
set -g @logging-filename "#{session_name}-#{window_name}-#{pane_index}.log"

# Bottom bar colors
set -g status-bg colour235
set -g status-fg colour253

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# Change the prefix key to C-a
set -g prefix M-a
unbind C-b
bind M-a send-prefix

# Copy to system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi v send-keys -X begin-selection

# New window/pane in the same directory
bind '"' split-window -v -c "#{pane_current_path}"
bind %   split-window -h -c "#{pane_current_path}"
bind c   new-window      -c "#{pane_current_path}"

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

# Increase buffer size
set-option -g history-limit 50000

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Start scroll
bind-key -n M-f copy-mode

# Command
bind-key -n M-';' command-prompt

# New window
bind-key -n M-s split-window -v -c "#{pane_current_path}"
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-c new-window

# Send clear screen
bind C-l send-keys 'C-l'

# switch windows alt+[]
bind-key -n M-] select-window -n
bind-key -n M-[ select-window -p
# switch panes alt+number
bind-key -n M-0 select-window -t 0
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
# bind-key -T copy-mode-vi 'M-\' select-pane -l

